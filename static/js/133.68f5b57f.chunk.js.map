{"version":3,"file":"static/js/133.68f5b57f.chunk.js","mappings":"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","sources":["components/BusinessCardScene.js"],"sourcesContent":["import * as React from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { OrbitControls, Text3D } from \"@react-three/drei\";\nimport * as THREE from \"three\";\n\nfunction CardMesh({ onMeshLoaded, isMobile }) {\n  const faceMat = React.useMemo(\n    () =>\n      new THREE.MeshPhysicalMaterial({\n        color: \"#10121e\",\n        metalness: 1,\n        clearcoat: 1,\n        clearcoatRoughness: 0.3,\n        envMapIntensity: 1.8,\n      }),\n    [],\n  );\n  const edgeMat = React.useMemo(\n    () =>\n      new THREE.MeshPhysicalMaterial({\n        color: \"#ffd166\",\n        metalness: 1,\n        roughness: 0.4,\n        clearcoat: 1,\n        envMapIntensity: 2.2,\n      }),\n    [],\n  );\n  const geometry = React.useMemo(() => {\n    const w = 2.6;\n    const h = 4.2;\n    const r = 0.25;\n    const shape = new THREE.Shape();\n    shape.moveTo(-w / 2 + r, -h / 2);\n    shape.lineTo(w / 2 - r, -h / 2);\n    shape.quadraticCurveTo(w / 2, -h / 2, w / 2, -h / 2 + r);\n    shape.lineTo(w / 2, h / 2 - r);\n    shape.quadraticCurveTo(w / 2, h / 2, w / 2 - r, h / 2);\n    shape.lineTo(-w / 2 + r, h / 2);\n    shape.quadraticCurveTo(-w / 2, h / 2, -w / 2, h / 2 - r);\n    shape.lineTo(-w / 2, -h / 2 + r);\n    shape.quadraticCurveTo(-w / 2, -h / 2, -w / 2 + r, -h / 2);\n    return new THREE.ExtrudeGeometry(shape, {\n      depth: 0.04,\n      bevelEnabled: false,\n      material: 0,\n      extrudeMaterial: 1,\n    });\n  }, []);\n\n  const ref = React.useRef();\n\n  const [logoTexture, setLogoTexture] = useState(null);\n  const [textureError, setTextureError] = useState(false);\n\n  useEffect(() => {\n    const textureLoader = new THREE.TextureLoader();\n    textureLoader.load(\n      \"/assets/abstract.png\",\n      (texture) => {\n        setLogoTexture(texture);\n        if (onMeshLoaded) {\n          onMeshLoaded();\n        }\n      },\n      undefined,\n      (error) => {\n        console.error(\"Error loading texture:\", error);\n        setTextureError(true);\n        if (onMeshLoaded) {\n          onMeshLoaded();\n        }\n      },\n    );\n  }, [onMeshLoaded]);\n\n  useFrame(({ clock }) => {\n    if (ref.current)\n      ref.current.rotation.z = Math.sin(clock.elapsedTime * 0.3) * 0.025;\n  });\n\n  return (\n    <group ref={ref} position={[0, isMobile ? 0.8 : 0, 0]}>\n      <mesh geometry={geometry} material={[faceMat, edgeMat]} />\n\n      {logoTexture && (\n        <mesh position={[0, 1.6, 0.05]}>\n          <planeGeometry args={[2.58, 1]} />\n          <meshPhysicalMaterial\n            map={logoTexture}\n            metalness={0.3}\n            roughness={0.7}\n            transparent\n          />\n        </mesh>\n      )}\n\n      {textureError && (\n        <mesh position={[0, 1.6, 0.05]}>\n          <planeGeometry args={[2.58, 1]} />\n          <meshPhysicalMaterial color=\"#333\" metalness={0.3} roughness={0.7} />\n        </mesh>\n      )}\n\n      <React.Suspense fallback={null}>\n        <Text3D\n          font=\"https://threejs.org/examples/fonts/helvetiker_regular.typeface.json\"\n          size={0.4}\n          height={0.008}\n          position={[1.2, -1.7, 0.036]}\n          rotation={[0, 0, Math.PI / 2]}\n        >\n          BLISS\n          <meshPhysicalMaterial\n            attach=\"material\"\n            color=\"#0a0a0a\"\n            metalness={0}\n            roughness={0.2}\n            clearcoat={0}\n            clearcoatRoughness={1}\n            envMapIntensity={0.5}\n          />\n        </Text3D>\n        <Text3D\n          font=\"https://threejs.org/examples/fonts/helvetiker_bold.typeface.json\"\n          size={0.1}\n          height={0.006}\n          position={[-0.6, 0.1, 0.036]}\n          rotation={[0, 0, 0]}\n        >\n          CHARITRA ARORA\n          <meshPhysicalMaterial\n            attach=\"material\"\n            color=\"#ffffff\"\n            roughness={1}\n          />\n        </Text3D>\n        <Text3D\n          font=\"https://threejs.org/examples/fonts/helvetiker_regular.typeface.json\"\n          size={0.07}\n          height={0.005}\n          position={[-0.5, -0.1, 0.036]}\n          rotation={[0, 0, 0]}\n        >\n          SOFTWARE DEVELOPER\n          <meshPhysicalMaterial\n            attach=\"material\"\n            color=\"#ffffff\"\n            roughness={1}\n          />\n        </Text3D>\n        <Text3D\n          font=\"https://threejs.org/examples/fonts/helvetiker_regular.typeface.json\"\n          size={0.08}\n          height={0.006}\n          position={[-1.1, -1.1, 0.036]}\n          rotation={[0, 0, 0]}\n        >\n          +91 810 311 8540\n          <meshPhysicalMaterial\n            attach=\"material\"\n            color=\"#ffffff\"\n            roughness={1}\n          />\n        </Text3D>\n        <Text3D\n          font=\"https://threejs.org/examples/fonts/helvetiker_regular.typeface.json\"\n          size={0.08}\n          height={0.006}\n          position={[-1.1, -1.3, 0.036]}\n          rotation={[0, 0, 0]}\n        >\n          charitraarora@gmail.com\n          <meshPhysicalMaterial\n            attach=\"material\"\n            color=\"#ffffff\"\n            roughness={1}\n          />\n        </Text3D>\n      </React.Suspense>\n    </group>\n  );\n}\n\nfunction Lights() {\n  return (\n    <>\n      <ambientLight intensity={0.5} />\n      <spotLight\n        color=\"#ffd166\"\n        position={[5, 6, 5]}\n        angle={0.4}\n        penumbra={1}\n        intensity={1.8}\n        castShadow\n      />\n      <directionalLight\n        color=\"#ffffff\"\n        position={[-5, 4, 23]}\n        intensity={0.2}\n      />\n      <directionalLight\n        color=\"#ffffff\"\n        position={[8, -6, 23]}\n        intensity={0.2}\n      />\n    </>\n  );\n}\n\nexport default function CardShowcase({ onLoaded }) {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isMobileLayout, setIsMobileLayout] = useState(false);\n  const [cameraSettings, setCameraSettings] = useState({\n    position: [0, 0, 7],\n    fov: 40,\n  });\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const handleResize = () => {\n      const isMobile = window.innerWidth < 768;\n      setIsMobileLayout(isMobile);\n      setCameraSettings({\n        position: [0, isMobile ? 0.5 : 0, isMobile ? 8 : 7],\n        fov: 45,\n      });\n    };\n\n    handleResize(); // Set initial values\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const handleMeshLoaded = React.useCallback(() => {\n    setIsLoaded(true);\n    if (onLoaded) {\n      onLoaded();\n    }\n  }, [onLoaded]);\n\n  return (\n    <div\n      ref={canvasRef}\n      style={{\n        width: \"100%\",\n        height: \"100vh\",\n        position: \"relative\",\n        overflow: \"hidden\",\n      }}\n    >\n      <Canvas\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          background: \"transparent\",\n          opacity: isLoaded ? 1 : 0,\n          transition: \"opacity 0.5s ease\",\n        }}\n        shadows\n        camera={cameraSettings}\n      >\n        <CardMesh onMeshLoaded={handleMeshLoaded} isMobile={isMobileLayout} />\n        <Lights />\n        <OrbitControls\n          enablePan={false}\n          enableZoom={false}\n          autoRotate={true}\n          autoRotateSpeed={0.15}\n          minPolarAngle={Math.PI / 2 - 0.3}\n          maxPolarAngle={Math.PI / 2 + 0.3}\n        />\n      </Canvas>\n    </div>\n  );\n}\n"],"names":["CardMesh","_ref","onMeshLoaded","isMobile","faceMat","React","THREE","color","metalness","clearcoat","clearcoatRoughness","envMapIntensity","edgeMat","roughness","geometry","shape","moveTo","lineTo","w","quadraticCurveTo","h","depth","bevelEnabled","material","extrudeMaterial","ref","logoTexture","setLogoTexture","useState","textureError","setTextureError","useEffect","load","texture","undefined","error","console","useFrame","_ref2","clock","current","rotation","z","Math","sin","elapsedTime","_jsxs","position","children","_jsx","args","map","transparent","fallback","Text3D","font","size","height","PI","attach","Lights","_Fragment","intensity","angle","penumbra","castShadow","CardShowcase","_ref3","onLoaded","isLoaded","setIsLoaded","isMobileLayout","setIsMobileLayout","cameraSettings","setCameraSettings","fov","canvasRef","useRef","handleResize","window","innerWidth","addEventListener","removeEventListener","handleMeshLoaded","style","width","overflow","Canvas","background","opacity","transition","shadows","camera","OrbitControls","enablePan","enableZoom","autoRotate","autoRotateSpeed","minPolarAngle","maxPolarAngle"],"sourceRoot":""}